solution:
  # General configuration for the simulation run
  run_type: "FAT" # Specifies the run type as fatigue analysis
  mode: "STRESS" # Mode of analysis
  output: "JSON" # Output data format
  stress_criteria:
    # Criteria for stress evaluation
    number: 24 # Number of stress points to evaluate
    method: "SXXCRIT" # Method used for stress evaluation
  mean:
    # Configuration for mean stress correction
    mean: "NONE" # Type of mean stress
    postfix: "FIXEDMEAN" # Postfix for mean stress correction
    number: 0 # Placeholder for future use
  node:
    # Node selection for analysis
    from: 690103 # Starting node ID
    to: 690103 # Ending node ID
    path: "NONE" # Path for node data files
  damage:
    # Damage model parameters
    error: 0.01 # Error tolerance
    dadm: 1.0 # Damage accumulation method

material:
  # Material properties
  name: "Steel" # Material name
  youngs_modulus: 210000.0 # Young's modulus in MPa
  poissons_ratio: 0.3 # Poisson's ratio
  yield_stress: 355.0 # Yield stress in MPa
  ultimate_stress: 510.0 # Ultimate stress in MPa
  fatigue:
    # Fatigue properties
    slope:
      # Slope parameters for SN curve
      m1: 3 # Slope before the knee
      m2: 5 # Slope after the knee
    knee:
      # Knee point for the SN curve
      cycle: 5000000 # Cycle count at knee
      stress: 52.0 # Stress at knee in MPa
    cutoff:
      # Cutoff values for SN curve
      max: 440 # Maximum stress
      min: 1 # Minimum stress

safety_factor:
  # Safety factors for different calculations
  gmre: 1.0 # Safety factor for elastic reserve
  gmrm: 1.0 # Safety factor for material reserve
  gmfat: 1.35 # Safety factor for fatigue

timeseries:
  # Time series configuration
  path: "tests/timeseries" # Path for time series files containing the sensor data
  sensorfile: "tests/timeseries/sensors.json" # Path for sensor data files specifying the sensors and their locations in the time series files
  interpolations:
    - name: "StressTimeseries" # Sensor type
      method: "LINEAR" # Interpolation method
      path: "tests/stresfile" # Path for the unit stress files needed for the interpolation
      parse_config:
        header: 1 # Header lines in the file
        delimiter: " " # Delimiter for the file
      scale: 0.001 # Scale factor for interpolation
      dimension: 3 # Dimension for interpolation
      sensor: ["Fx", "Fy", "Fz"] # Sensor for interpolation and the name of each coordinate in coordinates list
      points:
      - file: "FX0FY0FZ0.usf" # File for interpolation point 1
        coordinates: [1.0, 0.0, 0.0] # Value for interpolation point 2
      - file: "FX1FY0FZ0.usf" # File for interpolation point 2
        coordinates: [1.0, 0.0, 0.0] # Value for interpolation point 2
      - file: "FX0FY1FZ0.usf" # File for interpolation point 3
        coordinates: [0.0, 1.0, 0.0] # Value for interpolation point 3
      - file: "FX0FY0FZ1.usf" # File for interpolation point 4
        coordinates: [0.0, 0.0, 1.0] # Value for interpolation point 4
        
  loadcases:
  - loadcase: 
    fam: 1 
    file: "time_series_sensors_example_1.csv" 
    frequency: 9634.400
    gf_ext: 1.35
    gf_fat: 1.00
  - loadcase: 
    fam: 1 
    file: "time_series_sensors_example_2.csv" 
    frequency: 94.400
    gf_ext: 1.35
    gf_fat: 1.00
  - loadcase: 
    fam: 1 
    file: "time_series_sensors_example_3.csv" 
    frequency: 9224.400
    gf_ext: 1.35
    gf_fat: 1.00
  - loadcase: 
    fam: 1 
    file: "time_series_sensors_example_4.csv" 
    frequency: 1974.400
    gf_ext: 1.35
    gf_fat: 1.00
  - loadcase: 
    fam: 1 
    file: "time_series_sensors_example_5.csv" 
    frequency: 47945.400
    gf_ext: 1.35
    gf_fat: 1.00

  parameters:
    a: 5
    b: 3

  variables:
    max_value: "max(a, b)"
    sin_of_a: "math::sin(a)"
    cos_of_b: "math::cos(b)"
    a_plus_b: "a + b"
    a_minus_b: "a - b"
    product: "a * b"
    average: "(a + b) / 2"
    sin_plus_cos: "sin_of_a + cos_of_b"
    max_plus_product: "max_value + product"
    final_expression: "average + sin_plus_cos + max_plus_product"

  expressions:
    # Order of evaluation for expressions
    order: ["max_value", "sin_of_a", "cos_of_b", "a_plus_b", "a_minus_b", "product", "average", "sin_plus_cos", "max_plus_product", "final_expression"]
